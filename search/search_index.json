{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"additionalResources/","title":"<z onclick='(function(){window.open(\"https://webexcc-sa.github.io\",\"_blank\")}())'>Additional Resources</z>","text":""},{"location":"cheatsheet/","title":"Cheat Sheet","text":""},{"location":"cheatsheet/#create-a-new-flow","title":"Create a New Flow","text":""},{"location":"cheatsheet/#create-flow-variables","title":"Create Flow Variables","text":""},{"location":"cheatsheet/#add-global-variables-to-a-flow","title":"Add Global Variables to a Flow","text":""},{"location":"cheatsheet/#add-a-node-to-a-flow","title":"Add a Node to a Flow","text":""},{"location":"cheatsheet/#add-a-subflow-to-a-flow","title":"Add a Subflow to a Flow","text":""},{"location":"cheatsheet/#publish-a-flow","title":"Publish a Flow","text":""},{"location":"cheatsheet/#map-a-flow-to-an-inbound-channel-assign-an-inbound-number","title":"Map a Flow to an Inbound Channel (Assign an Inbound Number)","text":""},{"location":"conclusion/","title":"Thank you!  Please take a short survey!","text":""},{"location":"lab1_getting_started/","title":"Lab 1 - Getting Started","text":""},{"location":"lab1_getting_started/#section-1","title":"Section 1","text":"<p>Please use the following credentials to connect to device:</p> <code>IP Address</code> 1.1.1.1 <code>Username</code> admin <code>Password</code> C1sco123 <p>My content</p> <p>Note</p> <p>This is a note</p> <p>Cisco IOS code block:</p> <pre><code>hostname ABC\ninterface GigabitEthernet1\n ip address 122.1.1.1\n</code></pre> <p>Image:</p> <p></p>"},{"location":"lab1_getting_started/#section-2","title":"Section 2","text":"<p>More content</p>"},{"location":"lab1_returningCustomer/","title":"Lab 1 - Routing Returning Callers","text":""},{"location":"lab1_returningCustomer/#story","title":"Story","text":"<p>When a customer calls back into the contact center within ten minutes of their last call ending, we can assume there was a dropped call, missed callback, or they need additional assistance from their last interaction.  We are going to prioritize their call in the queue so that they can finish their business.</p>"},{"location":"lab1_returningCustomer/#high-level-explanation","title":"High Level Explanation","text":"<ol> <li>New call comes into the flow</li> <li>Call the Search API to check if the ANI (caller's number) had a call which ended in the last 10 minutes</li> <li>If the caller had a connected call which ended within the last 10 minutes, we will play a message and will queue the call with a higher priority so they will get assigned to the next available agent.</li> <li>If the caller did not end a call with the contact center in the previous 10 minutes, we will queue the call normally</li> </ol>"},{"location":"lab1_returningCustomer/#preconfigured-elements","title":"Preconfigured Elements","text":"<ol> <li>Wait treatment Subflow which will provide Music in Queue and Queue Messages. </li> <li>Connector for calling Webex Contact Center APIs</li> </ol>"},{"location":"lab1_returningCustomer/#build","title":"Build","text":""},{"location":"lab1_returningCustomer/#create-an-new-flow","title":"Create an new flow","text":"<p>Create a flow named yourLabID_ReturningCaller</p>"},{"location":"lab1_returningCustomer/#create-this-flow-variable","title":"Create this flow variable","text":"<p>Name: previousID</p> <p>Type: String</p> <p>Default Value: empty</p>"},{"location":"lab1_returningCustomer/#add-a-play-message-node-for-our-welcome-message","title":"Add a Play Message node for our welcome message","text":"<p>Connect the New Phone Contact output node edge to this Play Message node</p> <p>Enable Text-To-Speech</p> <p>Select the Connector: Cisco Cloud Text-to-Speech</p> <p>Click the Add Text-to-Speech Message button</p> <p>Delete the Selection for Audio File</p> <p>Text-to-Speech Message: Welcome to Lab 1 of Solutions use-cases and APIs. </p>"},{"location":"lab1_returningCustomer/#add-an-http-request-node-for-our-query","title":"Add an HTTP Request node for our query","text":"<p>Connect the output node edge from the play message node to this node</p> <p>Select Use Authenticated Endpoint</p> <p>Connector: WxCC_API</p> <p>Path: /search</p> <p>Method: POST</p> <p>Content Type: Application/JSON</p> <p>Copy this GraphQL query into the request body: <pre><code>{\"query\":\"query lastTen($from:Long! $to:Long! $timeComparator:QueryTimeType $filter:TaskFilters){task(from:$from,to:$to,timeComparator:$timeComparator,filter:$filter){tasks{id status channelType createdTime endedTime origin destination direction terminationType isActive isCallback lastWrapupCodeName}}}\",\"variables\":{\"from\":\"{{now() | epoch(inMillis=true) - 600000}}\",\"to\":\"{{now() | epoch(inMillis=true)}}\",\"timeComparator\":\"endedTime\",\"filter\":{\"and\":[{\"status\":{\"equals\":\"ended\"}},{\"origin\":{\"equals\":\"{{NewPhoneContact.ANI}}\"}},{\"connectedCount\":{\"gte\":1}}]}}}\n</code></pre> Expanded Query For Understanding (optional) <pre><code>query lastTen(\n  $from: Long!\n  $to: Long!\n  $timeComparator: QueryTimeType\n  $filter: TaskFilters\n) {\n  task(from: $from, to: $to, timeComparator: $timeComparator, filter: $filter) {\n    tasks {\n      id\n      status\n      channelType\n      createdTime\n      endedTime\n      origin\n      destination\n      direction\n      terminationType\n      isActive\n      isCallback\n      lastWrapupCodeName\n    }\n  }\n}\n</code></pre> <pre><code>Variables:\n{\n  \"from\": \"{{now() | epoch(inMillis=true) - 600000}}\", # time now - 10 minutes represented in EPOCH time(ms)\n  \"to\": \"{{now() | epoch(inMillis=true)}}\", # time now represented in EPOCH time(ms)\n  \"timeComparator\": \"endedTime\",\n  \"filter\": {\n    \"and\": [\n      {\n        \"status\": {\n          \"equals\": \"ended\"\n        }\n      },\n      {\n        \"origin\": {\n          \"equals\": \"{{NewPhoneContact.ANI}}\" # ANI or caller phone number\n        }\n      },\n      {\n        \"connectedCount\": {\n          \"gte\": 1\n        }\n      }\n    ]\n  }\n}\n</code></pre> </p> <p>Parse Settings:</p> <p>Content Type: JSON</p> <ul> <li>Output Variable: <code>previousID</code></li> <li>Path Expression: <code>$.data.task.tasks[0].id</code></li> </ul>"},{"location":"lab1_returningCustomer/#add-a-condition-node","title":"Add a Condition node","text":"<p>Connect the output from the HTTP Request node to this node</p> <p>Expression: <code>{{previousID is empty}}</code></p> <p>We will connect the True node in a future step.</p> <p>Connect the False node edge to the Play Message node created in the next step. </p>"},{"location":"lab1_returningCustomer/#add-a-play-message-node","title":"Add a Play Message node","text":"<p>Connect the False node edge from the previous step to this node</p> <p>Enable Text-To-Speech</p> <p>Select the Connector: Cisco Cloud Text-to-Speech</p> <p>Click the Add Text-to-Speech Message button</p> <p>Delete the Selection for Audio File</p> <p>Text-to-Speech Message: It looks like you were just working with an agent and had to call back in.  We are prioritizing this call for the next available agent. </p>"},{"location":"lab1_returningCustomer/#add-a-queue-contact-node","title":"Add a Queue Contact node","text":"<p>Connect the output node edge from the Play Message node added in the last step to this node</p> <p>Select Static Queue</p> <p>Queue: yourQueueID</p> <p>Select Static Priority</p> <p>Static Priority Value: P1 </p>"},{"location":"lab1_returningCustomer/#add-a-subflow-node","title":"Add a Subflow node","text":"<p>In the Activity Library pane on the left side of the screen, click Subflows</p> <p>Find the Subflow names WaitTreatment and drag it onto the flow canvas like you would any other node.</p> <p>Connect the output node edge from the Queue Contact node added in the previous step to this node.</p> <p>Subflow Label: Latest</p> <p>Enable automatic updates: True</p> <p>Subflow Input Variables: None</p> <p>Subflow Output Variables: None</p> <p>Connect the output node edge from this node to the Disconnect Contact node added in the next step.</p>"},{"location":"lab1_returningCustomer/#add-a-disconnect-contact-node","title":"Add a Disconnect Contact node","text":""},{"location":"lab1_returningCustomer/#add-a-queue-contact-node_1","title":"Add a Queue Contact node","text":"<p>Connect the True node edge from the Condition node to this node</p> <p>Select Static Queue</p> <p>Queue: yourQueueID</p> <p>Connect the Output node edge from this node to the Subflow node</p>"},{"location":"lab1_returningCustomer/#check-your-flow","title":"Check your flow","text":""},{"location":"lab1_returningCustomer/#publish-your-flow","title":"Publish your flow","text":"<p>Turn on Validation at the bottom right corner of the flow builder</p> <p>If there are no Flow Errors, Click Publish</p> <p>Add a publish note</p> <p>Add Version Label(s): Live </p> <p>Click Publish Flow</p> <p>Note</p> <p>Remember to select \"Return to Flow\" after you publish your flow.</p>"},{"location":"lab1_returningCustomer/#map-your-flow-to-your-inbound-channel","title":"Map your flow to your inbound channel","text":"<p>Navigate to Control Hub &gt; Contact Center &gt; Channels</p> <p>Locate your Inbound Channel (you can use the search): </p> <p>Select the Routing Flow: _ReturningCaller</p> <p>Select the Version Label: Live</p> <p>Click Save in the lower right corner of the screen</p>"},{"location":"lab1_returningCustomer/#testing","title":"Testing","text":"<ol> <li>Launch the Agent Desktop and log in selecting the Desktop option for your Voice connection.</li> <li>On your Agent Desktop, make sure your status is not set to available<ol> <li>Using Webex, place a call to your Inbound Channel number </li> <li>After you hear the queue treatment start, you can abandon the call </li> </ol> </li> <li>Using Webex, place another call to your Inbound Channel number </li> <li>On your Agent Desktop, set your status to available<ol> <li>You should be offered a call, click on the accept button. (You may want to mute the mic on both Webex and the Agent Desktop)</li> <li>After a few moments end the call and select a wrapup code.</li> </ol> </li> <li>In your Flow:<ol> <li>Open the Debugger</li> <li>Select the last interaction (at the top of the list)</li> <li>Trace the steps taken in the flow</li> </ol> </li> <li>Answer these questions:<ol> <li>Was the call queued with priority?<ol> <li>Why or why not?</li> </ol> </li> </ol> </li> <li>Close the Debugger</li> <li>Using Webex, place another call to your Inbound Channel number </li> <li>On your Agent Desktop, set your status to available<ol> <li>You should be offered a call, click on the accept button. (You may want to mute the mic on both Webex and the Agent Desktop)</li> <li>After a few moments end the call and select a wrapup code.</li> </ol> </li> <li>In your Flow:<ol> <li>Open the debugger</li> <li>Select the last interaction (at the top of the list)</li> <li>Trace the steps taken in the flow</li> </ol> </li> <li>Answer these questions:<ol> <li>Was the call queued with priority?<ol> <li>Why or why not?</li> </ol> </li> <li>If you called another Inbound Channel number with the same flow logic, would your call be prioritized?<ol> <li>How could you change this behavior? </li> </ol> </li> </ol> </li> </ol>"},{"location":"lab1_returningCustomer/#once-you-have-completed-the-testing-let-the-instructor-know","title":"Once you have completed the testing, let the instructor know.","text":""},{"location":"lab2_LARbasedOnCSAT/","title":"Lab 2 - Last Agent Routing Using Simulated Auto CSAT","text":""},{"location":"lab2_LARbasedOnCSAT/#story","title":"Story","text":"<p>A common request for returning customers calling into a contact center is to work with the last person with which they had a good experience.  This may be because they are already familiar with what the customer needs or it may just be that the customer is familiar with the agent and enjoyed their last interaction. With the new Auto CSAT feature in the Webex Contact Center we can automatically account for this request and route to the last agent which had a high Auto CSAT with the customer.  </p> <p>Note</p> <p>Because this is a lab environment and you will be playing both the role of the customer and agent, we are going to use a simulated CSAT as it would be difficult to properly score a call in these conditions.  </p>"},{"location":"lab2_LARbasedOnCSAT/#high-level-explanation","title":"High Level Explanation","text":"<ol> <li>New call comes into the flow</li> <li>Call the Search API to find the last agent with which they had a good CSAT</li> <li>If the agent is available, we will route the call to that agent</li> <li>If the agent is not available or if no recent good CSAT scores exits for the caller, we will route the call to the queue for the next available agent. </li> </ol>"},{"location":"lab2_LARbasedOnCSAT/#preconfigured-elements","title":"Preconfigured elements","text":"<ol> <li>Wait treatment Subflow which will provide Music in Queue and Queue Messages. </li> <li>Connector for calling Webex Contact Center APIs</li> <li>Agent Editable and Reportable Global Variable for our simulated CSAT</li> </ol>"},{"location":"lab2_LARbasedOnCSAT/#build","title":"Build","text":""},{"location":"lab2_LARbasedOnCSAT/#create-an-new-flow","title":"Create an new flow","text":"<p>Create a flow named yourLabID_LARwCSAT</p>"},{"location":"lab2_LARbasedOnCSAT/#create-these-flow-variables","title":"Create these flow variables","text":"<p>Name: agentID</p> <p>Type: String</p> <p>Default Value: empty</p> <p>Name: queriedCSAT</p> <p>Type: Decimal</p> <p>Default Value: 0.0</p>"},{"location":"lab2_LARbasedOnCSAT/#add-the-global-variable-simulatedcsat-to-the-flow","title":"Add the Global Variable simulatedCSAT to the flow","text":"<p>There are no values to set because it has already been configured globally</p>"},{"location":"lab2_LARbasedOnCSAT/#add-a-play-message-node-for-our-welcome-message","title":"Add a Play Message node for our welcome message","text":"<p>Connect the New Phone Contact to this Play Message node</p> <p>Enable Text-To-Speech</p> <p>Select the Connector: Cisco Cloud Text-to-Speech</p> <p>Click the Add Text-to-Speech Message button</p> <p>Delete the Selection for Audio File</p> <p>Text-to-Speech Message: Welcome to Lab 2 of Solutions use-cases and APIs. </p>"},{"location":"lab2_LARbasedOnCSAT/#add-an-http-request-node-for-our-query","title":"Add an HTTP Request node for our query","text":"<p>Connect the output node edge from the Play Message node to this node</p> <p>Select Use Authenticated Endpoint</p> <p>Connector: WxCC_API</p> <p>Path: /search</p> <p>Method: POST</p> <p>Content Type: Application/JSON</p> <p>Copy this GraphQL query into the request body: <pre><code>{\"query\":\"query simulatedCSAT($from:Long! $to:Long! $timeComparator:QueryTimeType $filter:TaskFilters $name:String!){task(from:$from,to:$to,timeComparator:$timeComparator,filter:$filter){tasks{owner{name id}simulatedCSAT:doubleGlobalVariables(name:$name){name value}}}}\",\"variables\":{\"from\":\"{{now() | epoch(inMillis=true) - 604800000}}\",\"to\":\"{{now() | epoch(inMillis=true)}}\",\"timeComparator\":\"endedTime\",\"filter\":{\"and\":[{\"status\":{\"equals\":\"ended\"}},{\"origin\":{\"equals\":\"{{NewPhoneContact.ANI}}\"}},{\"doubleGlobalVariables\":{\"name\":{\"equals\":\"simulatedCSAT\"},\"value\":{\"gte\":3}}}]},\"name\":\"simulatedCSAT\"}}\n</code></pre> Expanded Query For Understanding (optional) <pre><code>query simulatedCSAT(\n  $from: Long!\n  $to: Long!\n  $timeComparator: QueryTimeType\n  $filter: TaskFilters\n  $name: String!\n) {\n  task(from: $from, to: $to, timeComparator: $timeComparator, filter: $filter) {\n    tasks {\n      owner {\n        name #Agent Name\n        id #Agent ID\n      }\n      simulatedCSAT: doubleGlobalVariables(name: $name) {\n        name\n        value #Value of the simulatedCSAT\n      }\n    }\n  }\n}\n</code></pre> <pre><code>Variables:\n\n{\n  \"from\": \"{{now() | epoch(inMillis=true) - 604800000}}\", # time now - 1 week represented in EPOCH time(ms)\n  \"to\": \"{{now() | epoch(inMillis=true)}}\", # time now represented in EPOCH time(ms)\n  \"timeComparator\": \"endedTime\",\n  \"filter\": {\n    \"and\": [\n      {\n        \"status\": {\n          \"equals\": \"ended\"\n        }\n      },\n      {\n        \"origin\": {\n          \"equals\": \"{{NewPhoneContact.ANI}}\"\n        }\n      },\n      {\n        \"doubleGlobalVariables\": { #Filtering on the Global Variable simulatedCSAT to be greater or equal to 3 \n          \"name\": {\n            \"equals\": \"simulatedCSAT\" \n          },\n          \"value\": {\n            \"gte\": 3\n          }\n        }\n      }\n    ]\n  },\n  \"name\": \"simulatedCSAT\" #The Alias name used for the global variable in the returned fields\n}\n</code></pre> </p> <p>Parse Settings:</p> <p>Content Type: JSON</p> <ul> <li>Output Variable: <code>agentID</code></li> <li> <p>Path Expression: <code>$.data.task.tasks[0].owner.id</code></p> </li> <li> <p>Output Variable: <code>queriedCSAT</code></p> </li> <li>Path Expression: <code>$.data.task.tasks[0].simulatedCSAT.value</code> </li> </ul>"},{"location":"lab2_LARbasedOnCSAT/#add-a-condition-node","title":"Add a Condition node","text":"<p>Connect the output node edge from teh HTTP Request node to this node</p> <p>Expression: <code>{{agentID is empty}}</code></p> <p>We will connect the True node in a future step.</p> <p>Connect the False node edge to the Queue To Agent node created in the next step. </p>"},{"location":"lab2_LARbasedOnCSAT/#add-a-queue-to-agent-node","title":"Add a Queue To Agent node","text":"<p>Agent Variable: agentID</p> <p>Agent Lookup Type: ID</p> <p>Set Contact Priority: True</p> <p>Select Static Priority</p> <p>Static Priority Value: P1</p> <p>Reporting Queue: yourQueueID</p> <p>Park Contact if Agent Unavailable: False</p> <p>Recovery Queue: yourQueueID</p> <p>Connect the Output and Error node edges to the Queue Contact node created in the next step</p>"},{"location":"lab2_LARbasedOnCSAT/#add-a-queue-contact-node","title":"Add a Queue Contact node","text":"<p>Connect the True node edge from the Condition node to this node</p> <p>Select Static Queue</p> <p>Queue: yourQueueID</p> <p>Connect the Output node edge from this node to the Subflow node</p>"},{"location":"lab2_LARbasedOnCSAT/#add-a-subflow-node","title":"Add a Subflow node","text":"<p>In the Activity Library pane on the left side of the screen, click Subflows</p> <p>Find the Subflow names WaitTreatment and drag it onto the flow canvas like you would any other node.</p> <p>Connect the output node edge from the Queue Contact node added in the previous step to this node.</p> <p>Subflow Label: Latest</p> <p>Enable automatic updates: True</p> <p>Subflow Input Variables: None</p> <p>Subflow Output Variables: None</p> <p>Connect the output node edge from this node to the Disconnect Contact node added in the next step.</p>"},{"location":"lab2_LARbasedOnCSAT/#add-a-disconnect-contact-node","title":"Add a Disconnect Contact node","text":""},{"location":"lab2_LARbasedOnCSAT/#check-your-flow","title":"Check your flow","text":""},{"location":"lab2_LARbasedOnCSAT/#publish-your-flow","title":"Publish your flow","text":"<p>Turn on Validation at the bottom right corner of the flow builder</p> <p>If there are no Flow Errors, Click Publish</p> <p>Add a publish note</p> <p>Add Version Label(s): Live </p> <p>Click Publish Flow</p>"},{"location":"lab2_LARbasedOnCSAT/#map-your-flow-to-your-inbound-channel","title":"Map your flow to your inbound channel","text":"<p>Navigate to Control Hub &gt; Contact Center &gt; Channels</p> <p>Locate your Inbound Channel (you can use the search): </p> <p>Select the Routing Flow: _LARwCSAT</p> <p>Select the Version Label: Live</p> <p>Click Save in the lower right corner of the screen</p>"},{"location":"lab2_LARbasedOnCSAT/#testing","title":"Testing","text":"<ol> <li>Launch the Agent Desktop and log in using the Desktop option.</li> <li>On your Agent Desktop, set your status to available<ol> <li>Using Webex, place a call to your Inbound Channel number </li> <li>You should be offered a call, click on the accept button. (You may want to mute the mic on both Webex and the Agent Desktop)</li> <li>In the Agent Desktop you will see a new field in Call Information section where you can edit the Simulated CSAT.  Enter a value of 2.9 and click save.</li> <li>After a few moments end the call and select a wrapup code.</li> </ol> </li> <li>Using Webex, place another call to your Inbound Channel number <ol> <li>You should be offered the call, click on the accept button.</li> <li>Enter a value of 3.7 in for Simulated CSAT and click save.</li> <li>After a few moments end the call and select a wrapup code.</li> </ol> </li> <li>In your Flow:<ol> <li>Open the debugger</li> <li>Select the first interaction (at the bottom of the list)</li> <li>Trace the steps taken in the flow</li> <li>Open the last interaction </li> <li>Trace the steps taken in the flow</li> </ol> </li> <li>Answer these questions:<ol> <li>Did the second call get routed to your agent via the Queue To Agent node?<ol> <li>Why or why not</li> </ol> </li> </ol> </li> <li>On your Agent Desktop, set your status to not be available</li> <li>Using Webex, place another call to your Inbound Channel number </li> <li>After you hear the queue treatment start, change your status to available on the agent desktop.<ol> <li>You should be offered the call, click on the accept button.</li> <li>Enter a value of 2.8 in for Simulated CSAT and click save.</li> <li>After a few moments end the call and select a wrapup code.</li> </ol> </li> <li>In your Flow:<ol> <li>Open the debugger</li> <li>Select the last interaction</li> <li>Trace the steps taken in the flow</li> </ol> </li> <li>Answer these questions:<ol> <li>Was the call routed to the Queue to Agent node?</li> <li>What happened next?<ol> <li>Why?</li> <li>What will happen if you call in again starting in the Available status?</li> </ol> </li> </ol> </li> <li>Make sure that you are in Available status on the agent desktop.</li> <li>Using Webex, place another call to your Inbound Channel number <ol> <li>You should be offered the call, click on the accept button.</li> <li>After a few moments end the call and select a wrapup code.</li> </ol> </li> <li>In your Flow:<ol> <li>Open the debugger</li> <li>Select the last interaction</li> <li>Trace the steps taken in the flow</li> </ol> </li> <li>Answer the following questions:<ol> <li>Was the call offered to you from the Queue to Agent node?</li> <li>What was the value of the variable queriedCSAT (look in the HTTP node step)<ol> <li>Why?</li> </ol> </li> <li>How do you think that you could change the logic/criteria to meet other business needs? </li> </ol> </li> </ol>"},{"location":"lab2_LARbasedOnCSAT/#once-you-have-completed-the-testing-let-the-instructor-know","title":"Once you have completed the testing, let the instructor know.","text":""},{"location":"lab3_CreatingSelfService/","title":"Creating a Self Service Support Option in an Emergency","text":""},{"location":"lab3_CreatingSelfService/#story","title":"Story","text":"<p>It is July 19, 2024 and your IT department is starting their day off with a full call queue of users which are all reporting the same issue as 8.5 million other PC users, their PCs are crashing or will not boot.  Worst of all your IT team cannot remotely access they affected user's PC and must walk them through the remediation steps over the phone.  As fortune would have it, the required steps for remediation were quickly spreading across the internet.  Now you just need to walk your users through the remediation process so they can get back to work. </p>"},{"location":"lab3_CreatingSelfService/#high-level-explanation","title":"High Level Explanation","text":"<ol> <li>A Business Hours Override has already been configured and is currently being used to let callers know that there is a widespread event causing a higher than normal call volume.</li> <li>Another team member has created a webhook flow in Connect to send an SMS message with instructions for resolving the issue and collect feedback from the customer regarding resolution status.</li> <li>Create a new flow to handle the logic for the emergency event<ol> <li>Inform callers that they will need to take actions on their PC to resolve the issue.</li> <li>Give callers the option to receive an SMS with a link to instructions or enter the queue as the X caller in queue.</li> <li>If they choose to receive the SMS, collect their SMS number and use a webhook to send them an SMS message.</li> <li>If they choose to wait in the queue, queue the call.  </li> </ol> </li> <li>After unit testing the new flow, edit the main flow changing the Play Message option into a Menu and a go to flow node </li> </ol>"},{"location":"lab3_CreatingSelfService/#preconfigured-elements","title":"Preconfigured elements","text":"<ol> <li>Existing main flow for the IT department</li> <li>Business Hours</li> <li>Business Hours Overrides</li> <li>Webhook for sending SMS</li> </ol>"},{"location":"lab3_CreatingSelfService/#build","title":"Build","text":""},{"location":"lab3_CreatingSelfService/#create-a-new-flow","title":"Create a new Flow","text":"<p>Create a flow named yourLabID_CrowdStrikeHelp</p>"},{"location":"lab3_CreatingSelfService/#add-a-get-queue-info-node","title":"Add a Get Queue Info node","text":"<p>Connect the New Phone Contact to this Get Queue Info node</p> <p>Select: Static Queue</p> <p>Queue: </p> <p>Lookback Time </p> <p>EWT Lookback: 5 Minutes</p>"},{"location":"lab3_CreatingSelfService/#add-a-menu-node","title":"Add a Menu node","text":"<p>Connect the output, Insufficient Information, and Failure node edges this Menu node</p> <p>Enable Text-To-Speech</p> <p>Select the Connector: Cisco Cloud Text-to-Speech</p> <p>Click the Add Text-to-Speech Message button</p> <p>Delete the Selection for Audio File</p> <p>Text-to-Speech Message: In order to resolve this issue, you will need to follow several steps on your PC as a technician will not be able to remotely connect to your machine.  Resolving this issue should only take a few minutes. To receive a link to a video walk through via text message which will help you resolve this immediately, press 1.  To enter the queue as the {{GetQueueInfo_NODEID.CallsQueuedNow + 1}} call in the queue press 2.</p> <p>In the Text-to-Speech Message replace GetQueueInfo_NODEID.CallsQueuedNow with the correct Get Queue Info output variable for Calls Queued Now.</p> <p>Select: Make Prompt Interruptible</p> <p>In Custom Menu Links:</p> <p>Use the Add New button and the Digit Number selector to provide Options 1 and 2</p> <p>Connect the No-Input Timeout and Unmatched Entry node edges and connect them to the front of this Menu node</p>"},{"location":"lab3_CreatingSelfService/#add-a-collect-digits-node","title":"Add a Collect Digits node","text":"<p>Connect the 1 output node edge from the Menu node to this Collect Digits node</p> <p>Enable Text-To-Speech</p> <p>Select the Connector: Cisco Cloud Text-to-Speech</p> <p>Click the Add Text-to-Speech Message button</p> <p>Delete the Selection for Audio File</p> <p>Text-to-Speech Message: Please enter your 10 digit mobile phone number starting with the area code.</p> <p>Select: Make Prompt Interruptible</p> <p>In Advanced Settings</p> <p>Minimum Digits: 10</p> <p>Maximum Digits: 10</p> <p>Connect the No-Input Timeout and Unmatched Entry node edges and connect them to the front of this Collect Digits node</p>"},{"location":"lab3_CreatingSelfService/#add-a-menu-node_1","title":"Add a Menu Node","text":"<p>Connect the output node edge from the Collect Digits node to this Menu node</p> <p>Enable Text-To-Speech</p> <p>Select the Connector: Cisco Cloud Text-to-Speech</p> <p>Click the Add Text-to-Speech Message button</p> <p>Delete the Selection for Audio File</p> <p>Text-to-Speech Message: <code>&lt;speak&gt;You have entered &lt;say-as interpret-as='telephone'&gt;{{CollectDigits_NODEID.DigitsEntered}}&lt;/say-as&gt;.  To receive an SMS message at this number, press 1.  To enter a different number, press 2. &lt;/speak&gt;</code></p> <p>In the Text-to-Speech Message replace CollectDigits_NODEID.DigitsEntered with the correct Collect Digits output variable for Digits Entered.</p> <p>Select: Make Prompt Interruptible</p> <p>In Custom Menu Links:</p> <p>Use the Add New button and the Digit Number selector to provide Options 1 and 2</p> <p>Connect the No-Input Timeout and Unmatched Entry node edges and connect them to the front of this Menu node</p> <p>Connect the 2 node edge output to the Collect Digits Node </p>"},{"location":"lab3_CreatingSelfService/#add-an-http-request-node","title":"Add an HTTP Request node","text":"<p>Connect the 1 output node edge from the last Menu node to this HTTP Request node</p> <p>Turn off Use Authenticated Endpoint</p> <p>Request URL: https://hooks.us.webexconnect.io/events/IB8ZVWPJUL</p> <p>Method: POST</p> <p>Content Type: Application/JSON</p> <p>Request Body:</p> <pre><code>{\n\"ANI\": \"{{NewPhoneContact.ANI}}\",\n\"sms\": \"+1{{CollectDigits_NODEID.DigitsEntered}}\",\n\"taskID\": \"{{NewPhoneContact.interactionId}}\"\n}\n</code></pre> <p>In the request body, replace CollectDigits_NODEID.DigitsEntered with the correct Collect Digits output variable for Digits Entered. </p>"},{"location":"lab3_CreatingSelfService/#add-a-play-message-node","title":"Add A Play Message node","text":"<p>Connect the output node edge from the HTTP Request node to this Play Message node</p> <p>Enable Text-To-Speech</p> <p>Select the Connector: Cisco Cloud Text-to-Speech</p> <p>Click the Add Text-to-Speech Message button</p> <p>Delete the Selection for Audio File</p> <p>Text-to-Speech Message: You should receive a text message with a link to instructions for resolving the issue within a few minutes.  Goodbye.</p> <p>Connect the output node edge from this node to the Disconnect Contact node added in the next step.</p>"},{"location":"lab3_CreatingSelfService/#add-a-disconnect-contact-node","title":"Add a Disconnect Contact node","text":""},{"location":"lab3_CreatingSelfService/#add-a-queue-contact-node","title":"Add a Queue Contact node","text":"<p>Connect the 2 output node edge from the first menu node to this Queue Contact node.</p> <p>Select Static Queue</p> <p>Queue: yourQueueID </p>"},{"location":"lab3_CreatingSelfService/#add-a-play-music-node","title":"Add a Play Music node","text":"<p>Connect the output from the Queue Contact node to this Play Music node</p> <p>Select Static Audio File</p> <p>Music File: defaultmusic_on_hold_cisco_opus_no_1.wav</p> <p>Connect the output node edge to the front of this Play Music Node</p>"},{"location":"lab3_CreatingSelfService/#check-your-flow","title":"Check your flow","text":""},{"location":"lab3_CreatingSelfService/#publish-your-flow","title":"Publish your flow","text":"<p>Turn on Validation at the bottom right corner of the flow builder</p> <p>If there are no Flow Errors, Click Publish</p> <p>Add a publish note</p> <p>Add Version Label(s): Live </p> <p>Click Publish Flow</p>"},{"location":"lab3_CreatingSelfService/#map-your-flow-to-your-inbound-channel","title":"Map your flow to your inbound channel","text":"<p>Navigate to Control Hub &gt; Contact Center &gt; Channels</p> <p>Locate your Inbound Channel (you can use the search): </p> <p>Select the Routing Flow: _CrowdStrikeHelp</p> <p>Select the Version Label: Live</p> <p>Click Save in the lower right corner of the screen</p>"},{"location":"lab3_CreatingSelfService/#unit-test-the-flow","title":"Unit Test the Flow","text":"<ol> <li>Using Webex, place a call to your Inbound Channel number <ol> <li>You should here the TTS message explaining the issue, giving you the option to press 1 to receive a link to instructions via SMS or to enter the queue as the 1 call in queue press 2.</li> <li>Press 2<ol> <li>you should here the music in queue.</li> <li>Hang up</li> </ol> </li> </ol> </li> <li>Using Webex, place a call to your Inbound Channel number <ol> <li>You should here the TTS message explaining the issue, giving you the option to press 1 to receive a link to instructions via SMS or to enter the queue as the 1 call in queue press 2.</li> <li>Press 1</li> <li>Enter your 10 digit US based mobile number</li> <li>You should here the message \"You have entered\", number you entered read back to you, and the option to receive and SMS message at that number or to enter in another number.<ol> <li>Press 2</li> <li>Enter in a different number</li> <li>You should here the message \"You have entered\", number you entered read back to you, and the option to receive and SMS message at that number or to enter in another number.<ol> <li>Press 2<ol> <li>Enter in your original SMS number</li> <li>You should here the message \"You have entered\", number you entered read back to you, and the option to receive and SMS message at that number or to enter in another number.</li> <li>Press 1</li> <li>You will hear the message \"You should receive a text message with a link to instructions for resolving the issue within a few minutes. Goodbye.\"</li> <li>The call will be disconnected</li> </ol> </li> </ol> </li> </ol> </li> </ol> </li> <li>You will Receive an SMS message with a link to a youtube video and instructions to reply either \"Resolved\" or \"Help\"<ol> <li>Reply Resolved</li> </ol> </li> </ol>"},{"location":"lab3_CreatingSelfService/#edit-the-crowdstrike_starter-flow","title":"Edit the CrowdStrike_Starter Flow","text":"<p>In Control Hub &gt; Contact Center &gt; Flows </p> <p>Open the flow: _CrowdStrikeStarter</p> <p>Switch on the Edit toggle in the header section of the flow builder</p>"},{"location":"lab3_CreatingSelfService/#replace-the-play-message-node-which-we-put-in-once-we-identified-the-event-with-a-menu-node","title":"Replace the Play Message node which we put in once we identified the event with a Menu node","text":"<p>Delete the Play Message node which is connected to the CrowdStrike node edge of the </p> <p>Add a Menu node</p> <p>Connect the output node edge from the Collect Digits node to this Menu node</p> <p>Enable Text-To-Speech</p> <p>Select the Connector: Cisco Cloud Text-to-Speech</p> <p>Click the Add Text-to-Speech Message button</p> <p>Delete the Selection for Audio File</p> <p>Text-to-Speech Message: <code>There is a widespread Issue with Microsoft Windows not being able to boot and giving a bluescreen.  If you are facing this issue, please press 1.  If you are calling regarding a different issue, press 2.</code></p> <p>Select: Make Prompt Interruptible</p> <p>In Custom Menu Links:</p> <p>Use the Add New button and the Digit Number selector to provide Options 1 and 2</p> <p>Connect the No-Input Timeout and Unmatched Entry node edges and connect them to the front of this Menu node</p> <p>Connect the 2 node edge output to the main Menu node </p>"},{"location":"lab3_CreatingSelfService/#add-a-go-to-node","title":"Add a Go To node","text":"<p>Connect the 1 node edge from the new Menu node you created in the previous step to this Go To node</p> <p>Destination Type: Flow</p> <p>Select Static Flow</p> <p>Flow: _CrowdStrikeHelp</p> <p>Choose Version Label: Latest</p>"},{"location":"lab3_CreatingSelfService/#check-your-flow_1","title":"Check your flow","text":""},{"location":"lab3_CreatingSelfService/#publish-the-flow-using-the-test-tag","title":"Publish the Flow Using the Test Tag","text":"<p>Turn on Validation at the bottom right corner of the flow builder</p> <p>If there are no Flow Errors, Click Publish</p> <p>Add a publish note</p> <p>Add Version Label(s): Test </p> <p>Click Publish Flow </p>"},{"location":"lab3_CreatingSelfService/#map-your-flow-to-your-inbound-channel_1","title":"Map your flow to your inbound channel","text":"<p>Navigate to Control Hub &gt; Contact Center &gt; Channels</p> <p>Locate your Inbound Channel (you can use the search): </p> <p>Select the Routing Flow: _CrowdStrikeStarter</p> <p>Select the Version Label: Live</p> <p>Click Save in the lower right corner of the screen</p>"},{"location":"lab3_CreatingSelfService/#make-a-test-call-to-your-inbound-channel-number","title":"Make a test call to your inbound channel number","text":"<p>From Webex call your mapped inbound channel number: </p> <p>Note</p> <p>You will not hear the changes you have made to the flow as you published a different version of the flow using the version label.     This is to show that you can make changes to a flow without affecting the live/active version of the running flow.     In the next step we will map the \"Test\" version of the flow you just published.      Pretend that the next mapping activity would be completed on a number you are using for testing before committing your changes to the live flow.</p>"},{"location":"lab3_CreatingSelfService/#map-your-flow-to-your-inbound-channel_2","title":"Map your flow to your inbound channel","text":"<p>Navigate to Control Hub &gt; Contact Center &gt; Channels</p> <p>Locate your Inbound Channel (you can use the search): </p> <p>Select the Routing Flow: _CrowdStrikeStarter</p> <p>Select the Version Label: Test</p> <p>Click Save in the lower right corner of the screen</p>"},{"location":"lab3_CreatingSelfService/#dev-testing","title":"Dev Testing","text":"<ol> <li> <p>Using Webex, place a call to your Inbound Channel number </p> <ol> <li>After hearing the Menu prompt to press 1 if you are experiencing the blue screen issue or 2 if you are calling about a different issue, press 2.</li> <li>You should hear the normal main menu prompt<ol> <li>Hang up</li> </ol> </li> </ol> </li> <li> <p>Using Webex, place a call to your Inbound Channel number </p> <ol> <li>After hearing the Menu prompt to press 1 if you are experiencing the blue screen issue or 2 if you are calling about a different issue.</li> <li>Enter no selection<ol> <li>You should hear the previous menu prompt again.</li> <li>Press 2.</li> <li>You should hear the first Menu prompt from the _CrowdStrikeHelp</li> <li>Hang up or you can test one of the paths again.</li> </ol> </li> </ol> </li> </ol>"},{"location":"lab3_CreatingSelfService/#publish-the-flow-with-the-live-tag","title":"Publish the flow with the Live Tag","text":"<p>Turn on Validation at the bottom right corner of the flow builder</p> <p>If there are no Flow Errors, Click Publish</p> <p>Add a publish note</p> <p>Add Version Label(s): Live </p> <p>Click Publish Flow </p>"},{"location":"lab3_CreatingSelfService/#map-your-flow-to-your-inbound-channel_3","title":"Map your flow to your inbound channel","text":"<p>Navigate to Control Hub &gt; Contact Center &gt; Channels</p> <p>Locate your Inbound Channel (you can use the search): </p> <p>Select the Routing Flow: _CrowdStrikeStarter</p> <p>Select the Version Label: Live</p> <p>Click Save in the lower right corner of the screen</p> <p>Note</p> <p>Pretend that this mapping activity would be completed on the main number for the production IT flow.</p>"},{"location":"lab3_CreatingSelfService/#smoke-test","title":"Smoke Test","text":"<ol> <li> <p>Using Webex, place a call to your Inbound Channel number </p> <ol> <li>After hearing the Menu prompt to press 1 if you are experiencing the blue screen issue or 2 if you are calling about a different issue, press 2.</li> <li>You should hear the normal main menu prompt<ol> <li>Hang up</li> </ol> </li> </ol> </li> <li> <p>Using Webex, place a call to your Inbound Channel number </p> <ol> <li>After hearing the Menu prompt to press 1 if you are experiencing the blue screen issue or 2 if you are calling about a different issue.</li> <li>Enter no selection<ol> <li>You should hear the previous menu prompt again.</li> <li>Press 2.</li> <li>You should hear the first Menu prompt from the _CrowdStrikeHelp</li> <li>Hang up or you can test one of the paths again.</li> </ol> </li> </ol> </li> <li>Answer the following questions:<ol> <li>Why did we run the same tests as we did for the Dev Testing?</li> <li>How could we change the flow behavior after the CrowdStrike event has ended? (There are several answers.)</li> <li>How would you improve this flow?</li> </ol> </li> </ol>"},{"location":"lab3_CreatingSelfService/#once-you-have-completed-the-testing-let-the-instructor-know","title":"Once you have completed the testing, let the instructor know.","text":""},{"location":"labSetup/","title":"labSetup","text":"Lab POD Update <p>Start the lab</p>"},{"location":"overview/","title":"Overview","text":""},{"location":"overview/#learning-objectives","title":"Learning Objectives","text":"<p>This lab will give you an introduction to crafting call flows which extend the functionality of the Webex Contact Center and integrate them into a seamless experience for your agents and customers.</p>"},{"location":"overview/#disclaimer","title":"Disclaimer","text":"<p>Although the lab design and configuration examples could be used as a reference, for design related questions please contact your representative at Cisco, or a Cisco partner.</p>"},{"location":"overview/#lab-access","title":"Lab Access","text":"<p>In this lab we will be using Webex for making calls into the Contact Center and for viewing demos which will be shared by the instructor.  We will be using the same account for Admin and Agent activities in the Contact Center.  Your guide will reflect your specific environment variables, including login information, Channels, Queues, Teams, and assigned numbers in the steps of the actual lab as you progress.</p> <p>Login: Provided by proctor</p> <p>Password: Provided by proctor</p> <p>Webex Phone Number: Provided by proctor</p> <p>Assigned Inbound Channel Name: Provided by proctor</p> <p>Assigned Inbound Channel Number: Provided by proctor</p> <p>Assigned Queue Name: Provided by proctor</p> <p>Assigned Team name: Provided by proctor</p>"},{"location":"overview/#getting-started","title":"Getting Started","text":"<p>Log into Webex on your PC:</p> <ul> <li>Username: Provided by proctor</li> <li>Password: Provided by proctor </li> </ul> <p>Log into Webex Control Hub in Chrome</p> <p>Login: Provided by proctor</p> <p>Password: Provided by proctor</p>"},{"location":"overview/#testing-your-lab-setup","title":"Testing your lab setup","text":"<ol> <li>Launch the Agent Desktop and log in selecting the Desktop option for your Voice connection.</li> <li>From the Webex App, dial Provided by proctor<ol> <li>You will hear a greeting message which will include the pod number which you have been assigned.</li> <li>The call will be place in your queue.</li> <li>You will hear the hold music until the call is answered</li> </ol> </li> <li>In the agent desktop, set your status to Available and answer the call.<ol> <li>Confirm that you can hear audio being passed in both directions.</li> <li>Disconnect the call</li> <li>Select a Wrap-up Code</li> <li>Set your status to Meeting</li> </ol> </li> <li>In Control Hub, navigate to Contact Center &gt; Flows<ol> <li>Locate and open the flow named: yourLabID_Demo_Lab0</li> <li>Click on Debug at the bottom of the screen.</li> <li>Click on the interaction ID</li> <li>Explore the steps the call took as it traversed the flow.</li> <li>When you are done you can close the flow.</li> </ol> </li> </ol>"},{"location":"topologies/","title":"Lab topologies","text":""},{"location":"welcome/","title":"Welcome!","text":""}]}